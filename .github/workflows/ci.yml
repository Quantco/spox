name: CI

on: push

defaults:
  run:
    shell: bash -el {0}

jobs:
  pre-commit-checks:
    name: "Linux - pre-commit hooks - Python 3.8"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4
      - name: Install Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Run pre-commit checks
        uses: pre-commit/action@v3.0.0

  tests:
    name: "Linux - unit tests - ${{ matrix.OS }} - Python ${{ matrix.PYTHON_VERSION }}"
    runs-on: ${{ matrix.OS }}
    env:
      CI: True
    strategy:
      fail-fast: true
      matrix:
        OS: ["ubuntu-latest"]
        PYTHON_VERSION: ['3.8', '3.9', '3.10', '3.11']
        include:
          - OS: macos-latest-xlarge
            PYTHON_VERSION: "3.11"
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      - uses: mamba-org/setup-micromamba@v1 
        with:
          environment-file: environment.yml
          create-args: >-
            python=${{ matrix.PYTHON_VERSION }}
      - name: Run unit tests
        shell: bash -l {0}
        run: |
          pip install .
          pytest

  opset-generation:
    name: "Linux - opset generation - ${{ matrix.OS }} - Python ${{ matrix.PYTHON_VERSION }}"
    runs-on: ${{ matrix.OS }}
    env:
      CI: True
    strategy:
      fail-fast: true
      matrix:
        OS: ["ubuntu-latest", "macos-latest"]
        PYTHON_VERSION: ['3.8']
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.PYTHON_VERSION }}
          miniforge-variant: Mambaforge
          miniforge-version: 4.11.0-2
          use-mamba: true
          environment-file: environment.yml
          activate-environment: spox
      - name: Run code generation
        shell: bash -l {0}
        run: |
          pip install .
          pip install pandoc
          python tools/generate_opset.py
          git diff --exit-code
