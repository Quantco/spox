name: CI
on:
  push:
    branches:
      - "*"
    tags:
      - "*"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pre-commit-checks:
    name: Pre-commit Checks
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v5
      - name: Set up pixi
        uses: prefix-dev/setup-pixi@fef5c9568ca6c4ff7707bf840ab0692ba3f08293
        with:
          environments: default lint
      - name: pre-commit
        run: pixi run pre-commit-run --color=always --show-diff-on-failure

  unit-tests:
    name: pytest
    timeout-minutes: 30
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        environment:
          - py39
          - py310
          - py311
          - py312
          - min-onnxruntime
    steps:
      - name: Checkout branch
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Set up pixi
        uses: prefix-dev/setup-pixi@fef5c9568ca6c4ff7707bf840ab0692ba3f08293
        with:
          environments: ${{ matrix.environment }}
      - name: Install repository
        run: pixi run -e ${{ matrix.environment }} postinstall
      - name: Run pytest
        run: pixi run -e ${{ matrix.environment }} test

  opset-generation:
    name: "Linux - opset generation"
    runs-on: ubuntu-latest
    env:
      CI: True
    steps:
      - name: Checkout branch
        uses: actions/checkout@v5
      - name: Set up pixi
        uses: prefix-dev/setup-pixi@fef5c9568ca6c4ff7707bf840ab0692ba3f08293
        with:
          environments: opset-generation default
      - name: Install repository
        run: pixi run -e opset-generation postinstall
      - name: Run code generation
        run: |
          pixi run -e opset-generation python tools/generate_opset.py
          pixi run -e default pre-commit-run
