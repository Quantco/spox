{% for attr in get_attributes(schema, attr_type_overrides, subgraph_solutions) %}
    {% if attr.attr_constructor == "AttrGraph" %}
_{{ attr.name }}_subgraph: Graph = subgraph({{ attr.subgraph_solution }}, {{ attr.name }})
    {% endif %}
{% endfor %}
return _{{ schema.name }}(
    _{{ schema.name }}.Attributes(
{% for attr in get_attributes(schema, attr_type_overrides, subgraph_solutions) %}
    {% if attr.attr_constructor == "AttrGraph" %}
        {% set expr = "AttrGraph(_{}_subgraph)".format(attr.name) %}
    {% else %}
        {% set expr = "{}({})".format(attr.attr_constructor, attr.name) %}
    {% endif %}
    {{ attr.name }}={% if attr.constructor_type_hint.startswith("Optional[") and attr.constructor_type_hint.endswith("]")
        %}None if {{ attr.name }} is None else {{ expr }}{%
    else %}{{ expr }}{% endif %},
{% endfor %}
    ), _{{ schema.name }}.Inputs(
{% for param in schema.inputs
        %}{{param.name}}={{param.name}}, {%
endfor %}
    ), {%
if schema.outputs and is_variadic(schema.outputs[-1])
    %}out_variadic={{ out_variadic_solution if out_variadic_solution else "{}_count".format(schema.outputs[-1].name) }}, {%
endif %}).outputs{%
if schema.outputs | length <= 1
    %}.{{ schema.outputs[0].name }}{%
endif %}
